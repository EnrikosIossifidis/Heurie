Option 1:
Assign first house to first battery until capacity of the battery is reached

Option 2:
Assign randomly, taking max. cap. into account

Option 3:
Iterate over houses, assign house to closest battery unless max. cap. is reached

Option 4:
Rank all distances, assign from smallest to largest that are still available

Option 5:
Rank all houses on their ranges of options(batteries), assign the connection to the best option 
for that house starting from widest range

Option 6 (inspired by lecture):
Start with a certain distribution, switch two houses around if this results in a situation that is closer to optimal

Another thought:
Can we make a visualisation of the network (both graphs and spatial?)

List of tips & links:
Heuristieken dropbox(https://www.dropbox.com/sh/5a61pgl1h1uy0iv/AABfjUcLss7Z3Qhwc5WZsK3ca?dl=0)

Hitchhikers guide to Python (http://docs.python-guide.org/en/latest/)
NumPy (http://www.numpy.org/)

Matplotlib Python - scatterplot